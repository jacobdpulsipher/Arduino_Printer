extern char drawing[]; //This global variable was generated by the python script, which is then saved to the file drawing.c

int lr_motor_delay = 69;  //Not all CD drives are the same! You may adjust this number to change the HORIZONTAL length of the pixel(bigger number = longer pixel, smaller number = thinner pixel)
int ud_motor_delay = 100; //Not all CD drives are the same! You may adjust this number to change the VERTICAL height of the pixel (bigger number = taller pixel, smaller number - shorter pixel)

void setup() {

  pinMode(2, OUTPUT);
  pinMode(3, OUTPUT);
  pinMode(4, OUTPUT);
  pinMode(5, OUTPUT);
  pinMode(6, OUTPUT);
  pinMode(7, OUTPUT);
  pinMode(8, OUTPUT);
  pinMode(9, OUTPUT);

}

void loop(){
  char *code = drawing;
  size_t i = 0;
  while (code[i] != '\0')
  { 
    //Serial.println(code[i]);
    if ((code[i]) == '1'){ left();}
    else if ((code[i]) == '2'){ right();}
    else if ((code[i]) == '3'){ up();}
    else { down();} 
    i++;
  }

  
}

/**************************************************************************************************
 * Motor commands:
 * Each direction function contains 3 commands, broken up into blocks. 
 * -1st: Moves the motor in the direction according to the function name.
 * -2nd: Applies a brief negative voltage on the motor to stop the motor from continuing to roll forward. 
 * -3nd: Give the motor a brief moment of 0 voltage.
 * 
 * All of this is done to simulate the movement of a step motor, since the motors in this project are DC motors.
 *******************************************************************************************************/

void left()
{
  
  digitalWrite(6,HIGH);
  digitalWrite(7,HIGH);
  digitalWrite(8,LOW);
  digitalWrite(9,LOW);
  delay(lr_motor_delay);

  digitalWrite(9,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(7,LOW);
  digitalWrite(6,LOW);
  delay(30);

  digitalWrite(6,LOW);
  digitalWrite(7,LOW);
  digitalWrite(8,LOW);
  digitalWrite(9,LOW);
  delay(75);
}

void right()
{
  digitalWrite(9,HIGH);
  digitalWrite(8,HIGH);
  digitalWrite(7,LOW);
  digitalWrite(6,LOW);
  delay(lr_motor_delay);
  
  digitalWrite(6,HIGH);
  digitalWrite(7,HIGH);
  digitalWrite(8,LOW);
  digitalWrite(9,LOW);
  delay(30);
  
  digitalWrite(6,LOW);
  digitalWrite(7,LOW);
  digitalWrite(8,LOW);
  digitalWrite(9,LOW);
  delay(75);

}

void up()
{
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,LOW);
  digitalWrite(2,LOW);
  delay(ud_motor_delay + 3);
  
  digitalWrite(2,HIGH);
  digitalWrite(3,HIGH);
  digitalWrite(4,LOW);
  digitalWrite(5,LOW);
  delay(30);
  
  digitalWrite(2,LOW);
  digitalWrite(3,LOW);
  digitalWrite(4,LOW);
  digitalWrite(5,LOW);
  delay(75); 
}

void down()
{
  digitalWrite(2,HIGH);
  digitalWrite(3,HIGH);
  digitalWrite(4,LOW);
  digitalWrite(5,LOW);
  delay(ud_motor_delay);
  
  digitalWrite(5,HIGH);
  digitalWrite(4,HIGH);
  digitalWrite(3,LOW);
  digitalWrite(2,LOW);
  delay(30);
  
  digitalWrite(2,LOW);
  digitalWrite(3,LOW);
  digitalWrite(4,LOW);
  digitalWrite(5,LOW);
  delay(75);
}
